#水平分表配制（在同一个数据库里面，表名添加数值后缀，如：t_course_1，t_course_2）

# 数据源名称，多数据源以逗号分隔
spring.shardingsphere.datasource.names=db1

#配置同一个实体对应两张不同的表名（尽管内容相同）
spring.main.allow-bean-definition-overriding=true

#数据库连接属性
spring.shardingsphere.datasource.db1.type= com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db1.driver-class-name= com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db1.url= jdbc:mysql://localhost:3306/sharding_course_db?serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.db1.username= root
spring.shardingsphere.datasource.db1.password= 123456

# 配置 t_course 表规则
spring.shardingsphere.sharding.tables.t_course.actual-data-nodes=db1.t_course_$->{1..2}

# 分布式序列策略配置  按那个字段分表，该字段值的产生规则
spring.shardingsphere.sharding.tables.t_course.keyGenerator.column=cid
spring.shardingsphere.sharding.tables.t_course.keyGenerator.type=SNOWFLAKE

# 配置分表策略(根据cid字段来进行分库),偶数就添加到t_course_1，奇数就添加到t_course_2
# 就是配置数据按那个字段,该字段的值,对数据写入不同的数据表
spring.shardingsphere.sharding.tables.t_course.tableStrategy.inline.shardingColumn=cid
spring.shardingsphere.sharding.tables.t_course.tableStrategy.inline.algorithmExpression=t_course_$->{cid%2 + 1}

#打印执行的sql语句
spring.shardingsphere.props.sql.show=true
